<%- include('navbar') %>    

<div class="bg-gray-50 min-h-screen p-6 md:ml-64 sm:ml-0 main-content">
    <div class="max-w-6xl mx-auto">
        <!-- Header with improved spacing and icon -->
        <div class="flex items-center gap-3 mb-8 mt-6 pt-4">
            <div class="bg-green-100 p-2 rounded-lg">
                <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
            </div>
            <div>
                <h1 class="text-3xl font-bold text-gray-900">Attendance Input</h1>
                <p class="text-gray-600 mt-1">Record your class attendance quickly and easily</p>
            </div>
        </div>

        <!-- Action Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
            <!-- Mark Present Card -->
            <div class="add-attendance-button bg-green-500 text-white p-6 rounded-2xl cursor-pointer hover:bg-green-600 transition-colors shadow-md">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-xl font-bold mb-1">Mark Present</h3>
                        <p class="text-green-100">Quick attendance entry</p>
                    </div>
                    <div class="text-3xl">
                        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Bulk Entry Card -->
            <div class="bg-blue-500 text-white p-6 rounded-2xl cursor-pointer hover:bg-blue-600 transition-colors shadow-md">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-xl font-bold mb-1">Bulk Entry</h3>
                        <p class="text-blue-100">Multiple classes at once</p>
                    </div>
                    <div class="text-3xl">
                        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                    </div>
                </div>
            </div>

            <!-- View History Card -->
            <div class="bg-purple-500 text-white p-6 rounded-2xl cursor-pointer hover:bg-purple-600 transition-colors shadow-md">
                <div class="flex items-center justify-between">
                    <div>
                        <h3 class="text-xl font-bold mb-1">View History</h3>
                        <p class="text-purple-100">Past attendance records</p>
                    </div>
                    <div class="text-3xl">
                        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                    </div>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
            <!-- Today's Schedule -->
            <div class="col-span-2">
                <div class="mb-4">
                    <h2 class="text-2xl font-bold text-gray-900 mb-2">Today's Schedule</h2>
                    <p class="text-gray-600 mb-6">Mark attendance for today's classes</p>
                </div>
                
                <div class="space-y-4">
                    <% user.courses.forEach((course) => {
                        course.schedule.forEach((schedule) => {
                            if (schedule.status === 'scheduled' && schedule.dayOfWeek === new Date().getDay()) { %>
                                <div class="bg-white rounded-lg shadow-sm p-6 border border-gray-200">
                                    <div class="flex justify-between items-center">
                                        <div>
                                            <h3 class="text-xl font-bold text-gray-900 mb-1"><%= course.title %></h3>
                                            <p class="text-gray-600 mb-1"><%= schedule.startTime %> - <%= schedule.endTime %></p>
                                            <p class="text-gray-500"><%= course.profName %></p>
                                        </div>
                                        <div class="flex gap-2 attendance-buttons">
                                            <form action="/attendances/addAttendance" method="post" class="attendance-form">
                                                <input type="hidden" name="courseId" value="<%= course._id %>">
                                                <button type="submit" name="status" value="present" class="present-btn bg-green-500 text-white px-6 py-2 rounded-md font-medium hover:bg-green-600 transition-colors">
                                                    Present
                                                </button>
                                            </form>
                                            <form action="/attendances/addAttendance" method="post" class="attendance-form">
                                                <input type="hidden" name="courseId" value="<%= course._id %>">
                                                <button type="submit" name="status" value="absent" class="absent-btn bg-red-500 text-white px-6 py-2 rounded-md font-medium hover:bg-red-600 transition-colors">
                                                    Absent
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                        <% } }); }); %>
                </div>
            </div>

            <!-- Recent Entries -->
            <div>
                <div class="mb-4">
                    <h2 class="text-2xl font-bold text-gray-900 mb-2">Recent Entries</h2>
                    <p class="text-gray-600 mb-6">Your latest attendance records</p>
                </div>

                <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
                    <% attendances.forEach((attendance, index) => { %>
                        <div class="p-4 <%= index !== attendances.length - 1 ? 'border-b border-gray-100' : '' %>">
                            <div class="flex items-center justify-between">
                                <div class="flex items-center">
                                    <span class="dot <%= attendance.status === 'present' ? 'dot-present' : 'dot-absent' %>"></span>
                                    <span class="font-medium text-gray-900"><%= attendance.course.title %></span>
                                </div>
                                <div>
                                    <span class="<%= attendance.status === 'present' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %> px-3 py-1 rounded-full text-sm font-medium">
                                        <%= attendance.status %>
                                    </span>
                                </div>
                            </div>
                            <p class="text-gray-500 text-sm mt-1"><%= attendance.markedAt.toLocaleDateString() %></p>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <!-- Popup Form -->
    <div class="popup-form fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
        <div class="bg-white rounded-lg p-6 w-full max-w-md">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-semibold text-gray-900">Mark Attendance</h2>
                <button class="close text-gray-400 hover:text-gray-600">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            
            <form action="/attendances/addAttendance" method="post" class="space-y-4">
                <div>
                    <label for="courseId" class="block text-sm font-medium text-gray-700 mb-1">Course</label>
                    <select name="courseId" id="courseId" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="" disabled selected>Select Course</option>
                        <% user.courses.forEach((course)=>{ %>
                            <option value="<%= course._id %>"><%= course.title %></option>
                        <% }) %>
                    </select>
                </div>
                
                <div>
                    <label for="status" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                    <select name="status" id="status" class="w-full p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="present" selected>Present</option>
                        <option value="absent">Absent</option>
                    </select>
                </div>
                
                <div class="flex gap-3 pt-4">
                    <button type="button" class="close flex-1 bg-gray-200 text-gray-800 py-2 px-4 rounded-md hover:bg-gray-300 transition-colors">
                        Cancel
                    </button>
                    <button type="submit" class="flex-1 bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors">
                        Submit
                    </button>
                </div>
            </form>
        </div>
    </div>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const popupForm = document.querySelector('.popup-form');
            const addAttendanceButton = document.querySelector('.add-attendance-button');
            const closeButtons = document.querySelectorAll('.close');
            
            addAttendanceButton.addEventListener('click', () => {
                popupForm.style.display = 'flex';
            });
            
            closeButtons.forEach(button => {
                button.addEventListener('click', () => {
                    popupForm.style.display = 'none';
                });
            });
            
            // Close popup when clicking outside
            popupForm.addEventListener('click', (e) => {
                if (e.target === popupForm) {
                    popupForm.style.display = 'none';
                }
            });

            // Get all attendance forms
            const attendanceForms = document.querySelectorAll('.attendance-form');
            
            // Add submit event listeners to each form
            attendanceForms.forEach(form => {
                form.addEventListener('submit', function(e) {
                    // Prevent the default form submission
                    e.preventDefault();
                    
                    // Find the clicked button (the one that triggered the submit)
                    const clickedBtn = document.activeElement;
                    if (clickedBtn.classList.contains('present-btn') || clickedBtn.classList.contains('absent-btn')) {
                        // Find the card and buttons container
                        const card = form.closest('.bg-white');
                        const buttonsContainer = card.querySelector('.attendance-buttons');
                        
                        // Get form data
                        const formData = new FormData(form);
                        const courseId = formData.get('courseId');
                        const status = clickedBtn.value;
                        
                        // Submit the form data using fetch
                        fetch('/attendances/addAttendance', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: `courseId=${courseId}&status=${status}`
                        })
                        .then(response => {
                            if (response.ok) {
                                // Clear the buttons container
                                buttonsContainer.innerHTML = '';
                                
                                // Show status indicator based on which button was clicked
                                if (clickedBtn.classList.contains('present-btn')) {
                                    buttonsContainer.innerHTML = '<span class="bg-green-100 text-green-800 px-6 py-2 rounded-md font-medium">Present ✓</span>';
                                } else {
                                    buttonsContainer.innerHTML = '<span class="bg-red-100 text-red-800 px-6 py-2 rounded-md font-medium">Absent ✓</span>';
                                }
                                
                                // Update the recent attendance section if it exists
                                updateRecentAttendance(courseId, status);
                            } else {
                                console.error('Form submission failed');
                                alert('Failed to record attendance. Please try again.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                    }
                });
            });
        });
        
        // Function to update the recent attendance section
        function updateRecentAttendance(courseId, status) {
            // This is a placeholder function that would be implemented to update the recent entries section
            // without reloading the page. For simplicity, we'll just reload the page after a short delay.
            setTimeout(() => {
                window.location.reload();
            }, 1000);
        }
    </script>

    <style>
        .popup-form {
            display: none;
        }
        .dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        .dot-present {
            background-color: #10b981;
        }
        .dot-absent {
            background-color: #ef4444;
        }
        
        /* Mobile responsiveness */
        @media (max-width: 768px) {
            .ml-64 {
                margin-left: 0;
            }
            
            nav {
                display: none;
            }
            
            nav.block-mobile {
                display: block;
                position: fixed;
                z-index: 50;
                width: 100%;
                height: 100%;
            }
            
            nav.hidden-mobile {
                display: none;
            }
        }
    </style>
</div>