<%- include('navbar') %>    

<div class="ml-64 p-8 bg-gray-50 min-h-screen main-content md:ml-64 sm:ml-0">
    <div class="max-w-7xl mx-auto">
        <!-- Dashboard Header with improved spacing and icon -->
        <div class="flex items-center gap-3 mb-8 mt-6 pt-4">
            <div class="bg-blue-100 p-2 rounded-lg">
                <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
                </svg>
            </div>
            <div>
                <h1 class="text-3xl font-bold text-gray-800">Dashboard</h1>
                <p class="text-gray-600 mt-1">Track your attendance across all subjects and stay on top of your goals</p>
            </div>
        </div>

        <!-- Stat Cards -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Overall Attendance -->
            <div class="bg-white rounded-lg shadow p-6 flex justify-between items-center">
                <div>
                    <h2 class="text-sm font-medium text-gray-600">Overall Attendance</h2>
                    <div class="mt-2 flex items-end">
                        <p class="text-3xl font-bold text-blue-600" id="overallAttendanceValue">--.--%</p>
                    </div>
                    <p class="text-sm text-green-600 mt-2" id="attendanceChange">--.-% from last week</p>
                </div>
                <div class="bg-blue-100 p-3 rounded-lg">
                    <svg class="w-8 h-8 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6.5-4.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zm7 0a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM12 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                    </svg>
                </div>
            </div>

            <!-- Total Classes -->
            <div class="bg-white rounded-lg shadow p-6 flex justify-between items-center">
                <div>
                    <h2 class="text-sm font-medium text-gray-600">Total Classes</h2>
                    <div class="mt-2 flex items-end">
                        <p class="text-3xl font-bold text-gray-800" id="totalClassesValue">--</p>
                    </div>
                    <p class="text-sm text-blue-600 mt-2" id="classesAttended">-- attended</p>
                </div>
                <div class="bg-blue-100 p-3 rounded-lg">
                    <svg class="w-8 h-8 text-blue-600" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM11 13a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path>
                    </svg>
                </div>
            </div>

            <!-- Below 75% -->
            <div class="bg-white rounded-lg shadow p-6 flex justify-between items-center">
                <div>
                    <h2 class="text-sm font-medium text-gray-600">Below 75%</h2>
                    <div class="mt-2 flex items-end">
                        <p class="text-3xl font-bold text-red-600" id="belowThresholdValue">--</p>
                    </div>
                    <p class="text-sm text-red-600 mt-2">Needs attention</p>
                </div>
                <div class="bg-red-100 p-3 rounded-lg">
                    <svg class="w-8 h-8 text-red-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                </div>
            </div>

            <!-- This Week -->
            <div class="bg-white rounded-lg shadow p-6 flex justify-between items-center">
                <div>
                    <h2 class="text-sm font-medium text-gray-600">This Week</h2>
                    <div class="mt-2 flex items-end">
                        <p class="text-3xl font-bold text-green-600" id="thisWeekValue">--/--</p>
                    </div>
                    <p class="text-sm text-green-600 mt-2" id="weekAttendancePercent">--% attendance</p>
                </div>
                <div class="bg-green-100 p-3 rounded-lg">
                    <svg class="w-8 h-8 text-green-600" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                </div>
            </div>
        </div>

        <!-- Charts Section -->
        <div class="grid grid-cols-1 lg:grid-cols-5 gap-6">
            <!-- Attendance Trend Chart (3 columns) -->
            <div class="lg:col-span-3 bg-white rounded-lg shadow p-6">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-lg font-semibold text-gray-800">Attendance Trend</h2>
                    <select id="trendTimeRange" class="border rounded-md px-3 py-1 text-sm">
                        <option value="30">Last 30 days</option>
                        <option value="60">Last 60 days</option>
                        <option value="90">Last 90 days</option>
                    </select>
                </div>
                <div class="h-64">
                    <canvas id="attendanceTrendChart"></canvas>
                </div>
            </div>

            <!-- Subject-wise Attendance (2 columns) -->
            <div class="lg:col-span-2 bg-white rounded-lg shadow p-6">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-lg font-semibold text-gray-800">Subject-wise Attendance</h2>
                    <a href="/subjectManagement" class="text-blue-600 text-sm hover:underline">View All</a>
                </div>
                <div class="mb-6">
                    <canvas id="subjectDonutChart" class="h-48 mx-auto"></canvas>
                </div>
                <div class="space-y-4" id="subjectList">
                    <!-- Subject items will be dynamically added here -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
document.addEventListener('DOMContentLoaded', async function() {
    let dashboardData = null;
    
    // Fetch attendance data
    try {
        const response = await fetch('/api/dashboard-data');
        dashboardData = await response.json();
        
        // Update dashboard stats
        updateDashboardStats(dashboardData);
        
        // Initialize charts
        initAttendanceTrendChart(dashboardData.weeklyAttendance);
        initSubjectDonutChart(dashboardData.subjectAttendance);
        
        // Populate subject list
        populateSubjectList(dashboardData.subjectAttendance);
        
        // Add event listener for time range dropdown
        document.getElementById('trendTimeRange').addEventListener('change', function(e) {
            const days = parseInt(e.target.value);
            filterAttendanceTrend(days, dashboardData.weeklyAttendance);
        });
    } catch (error) {
        console.error('Error fetching dashboard data:', error);
        
        // Use fallback values if API fails
        updateDashboardStats({
            overallAttendance: 0,
            weeklyChange: 0,
            totalClasses: 0,
            classesAttended: 0,
            belowThreshold: 0,
            thisWeek: {
                attended: 0,
                total: 0,
                percentage: 0
            }
        });
    }

    // Handle window resize for responsive charts
    window.addEventListener('resize', function() {
        if (dashboardData) {
            initAttendanceTrendChart(dashboardData.weeklyAttendance);
            initSubjectDonutChart(dashboardData.subjectAttendance);
        }
    });
});

// Function to filter attendance trend by days
function filterAttendanceTrend(days, weeklyData) {
    // Calculate how many weeks to show based on days
    const weeksToShow = Math.ceil(days / 7);
    const filteredData = weeklyData.slice(-weeksToShow);
    
    // Reinitialize the chart with filtered data
    initAttendanceTrendChart(filteredData);
}

function updateDashboardStats(data) {
    // Update overall attendance
    document.getElementById('overallAttendanceValue').textContent = `${data.overallAttendance.toFixed(1)}%`;
    document.getElementById('attendanceChange').textContent = `${data.weeklyChange >= 0 ? '+' : ''}${data.weeklyChange.toFixed(1)}% from last week`;
    
    // Update total classes
    document.getElementById('totalClassesValue').textContent = data.totalClasses;
    document.getElementById('classesAttended').textContent = `${data.classesAttended} attended`;
    
    // Update below threshold
    document.getElementById('belowThresholdValue').textContent = data.belowThreshold;
    
    // Update this week
    document.getElementById('thisWeekValue').textContent = `${data.thisWeek.attended}/${data.thisWeek.total}`;
    document.getElementById('weekAttendancePercent').textContent = `${data.thisWeek.percentage}% attendance`;
}

function initAttendanceTrendChart(weeklyData) {
    const ctx = document.getElementById('attendanceTrendChart').getContext('2d');
    
    new Chart(ctx, {
        type: 'line',
        data: {
            labels: weeklyData.map(item => `Week ${item.week}`),
            datasets: [{
                label: 'Attendance %',
                data: weeklyData.map(item => item.percentage),
                borderColor: 'rgb(59, 130, 246)',
                backgroundColor: 'rgba(59, 130, 246, 0.1)',
                tension: 0.3,
                fill: true
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: false,
                    min: 70,
                    max: 100,
                    ticks: {
                        stepSize: 5
                    }
                }
            },
            plugins: {
                legend: {
                    display: false
                }
            }
        }
    });
}

function initSubjectDonutChart(subjectData) {
    const ctx = document.getElementById('subjectDonutChart').getContext('2d');
    
    new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: subjectData.map(item => item.name),
            datasets: [{
                data: subjectData.map(item => item.percentage),
                backgroundColor: [
                    'rgb(16, 185, 129)',  // green
                    'rgb(59, 130, 246)',  // blue
                    'rgb(239, 68, 68)',   // red
                    'rgb(139, 92, 246)',  // purple
                    'rgb(245, 158, 11)'   // orange
                ],
                borderWidth: 0,
                hoverOffset: 4
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            cutout: '70%',
            plugins: {
                legend: {
                    display: false
                }
            }
        }
    });
}

function populateSubjectList(subjectData) {
    const subjectList = document.getElementById('subjectList');
    subjectList.innerHTML = '';
    
    subjectData.forEach(subject => {
        const item = document.createElement('div');
        
        // Determine color based on percentage
        let dotColor = 'bg-green-500';
        if (subject.percentage < 75) {
            dotColor = 'bg-red-500';
        } else if (subject.percentage < 85) {
            dotColor = 'bg-orange-500';
        }
        
        item.innerHTML = `
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <span class="w-3 h-3 rounded-full ${dotColor} mr-3"></span>
                    <span class="text-gray-800">${subject.name}</span>
                </div>
                <span class="font-medium">${subject.percentage}%</span>
            </div>
        `;
        
        subjectList.appendChild(item);
    });
}
</script>

<style>
/* Mobile responsiveness */
@media (max-width: 768px) {
    .ml-64 {
        margin-left: 0;
    }
    
    nav {
        display: none;
    }
    
    nav.block-mobile {
        display: block;
        position: fixed;
        z-index: 50;
        width: 100%;
        height: 100%;
    }
    
    nav.hidden-mobile {
        display: none;
    }
}
</style>


